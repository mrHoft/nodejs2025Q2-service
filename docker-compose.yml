version: '3.8'

services:
  # Postgres database
  postgres:
    image: postgres:latest
    user: "postgres"
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USER}
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # TypeORM migration
  migration:
    build:
      context: .
      dockerfile: Migration
    environment:
      DB_HOST: postgres
      PG_PORT: 5432
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DB: ${PG_DB}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  # Nest application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres
      PG_PORT: 5432
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DB: ${PG_DB}
    ports:
      - "${APP_PORT}:4000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
    name: pg-data
  postgres_logs:
    name: pg-logs

networks:
  app-network:
    driver: bridge
