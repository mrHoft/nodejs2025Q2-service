openapi: 3.0.0
info:
  title: Home Library Service
  description: Home music library service
  version: 1.0.0

servers:
  - url: http://localhost:4000
    description: Local server

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        login:
          type: string
        password:
          type: string
        version:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
      required:
        - id
        - login
        - password
        - version
        - createdAt
        - updatedAt

    Artist:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        grammy:
          type: boolean
      required:
        - id
        - name
        - grammy

    Track:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        artistId:
          type: string
          format: uuid
          nullable: true
        albumId:
          type: string
          format: uuid
          nullable: true
        duration:
          type: integer
      required:
        - id
        - name
        - duration

    Album:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        year:
          type: integer
        artistId:
          type: string
          format: uuid
          nullable: true
      required:
        - id
        - name
        - year

    FavoritesResponse:
      type: object
      properties:
        artists:
          type: array
          items:
            $ref: '#/components/schemas/Artist'
        albums:
          type: array
          items:
            $ref: '#/components/schemas/Album'
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/Track'
      required:
        - artists
        - albums
        - tracks

    CreateUserDto:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      required:
        - login
        - password

    UpdatePasswordDto:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      required:
        - oldPassword
        - newPassword

    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
        artistId:
          type: string
          format: uuid
          nullable: true
        albumId:
          type: string
          format: uuid
          nullable: true
        duration:
          type: integer
      required:
        - name
        - duration

    UpdateTrackDto:
      type: object
      properties:
        name:
          type: string
        artistId:
          type: string
          format: uuid
          nullable: true
        albumId:
          type: string
          format: uuid
          nullable: true
        duration:
          type: integer
      required:
        - name
        - duration

    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
      required:
        - name
        - grammy

    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
      required:
        - name
        - grammy

    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: integer
        artistId:
          type: string
          format: uuid
          nullable: true
      required:
        - name
        - year

    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: integer
        artistId:
          type: string
          format: uuid
          nullable: true
      required:
        - name
        - year

paths:
  /user:
    get:
      summary: Get all users
      responses:
        '200':
          description: Successfully retrieved all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request - missing required fields

  /user/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid user ID format
        '404':
          description: User not found
    put:
      summary: Update user password
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordDto'
      responses:
        '200':
          description: Password updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid user ID format
        '403':
          description: Wrong old password
        '404':
          description: User not found
    delete:
      summary: Delete a user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: User deleted successfully
        '400':
          description: Invalid user ID format
        '404':
          description: User not found

  /track:
    get:
      summary: Get all tracks
      responses:
        '200':
          description: Successfully retrieved all tracks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Track'
    post:
      summary: Create a new track
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrackDto'
      responses:
        '201':
          description: Track created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: Bad request - missing required fields

  /track/{id}:
    get:
      summary: Get a track by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved track
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: Invalid track ID format
        '404':
          description: Track not found
    put:
      summary: Update track info
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackDto'
      responses:
        '200':
          description: Track updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: Invalid track ID format
        '404':
          description: Track not found
    delete:
      summary: Delete a track
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Track deleted successfully
        '400':
          description: Invalid track ID format
        '404':
          description: Track not found

  /artist:
    get:
      summary: Get all artists
      responses:
        '200':
          description: Successfully retrieved all artists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artist'
    post:
      summary: Create a new artist
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArtistDto'
      responses:
        '201':
          description: Artist created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: Bad request - missing required fields

  /artist/{id}:
    get:
      summary: Get an artist by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved artist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: Invalid artist ID format
        '404':
          description: Artist not found
    put:
      summary: Update artist info
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArtistDto'
      responses:
        '200':
          description: Artist updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: Invalid artist ID format
        '404':
          description: Artist not found
    delete:
      summary: Delete an artist
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Artist deleted successfully
        '400':
          description: Invalid artist ID format
        '404':
          description: Artist not found

  /album:
    get:
      summary: Get all albums
      responses:
        '200':
          description: Successfully retrieved all albums
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
    post:
      summary: Create a new album
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumDto'
      responses:
        '201':
          description: Album created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Bad request - missing required fields

  /album/{id}:
    get:
      summary: Get an album by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved album
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Invalid album ID format
        '404':
          description: Album not found
    put:
      summary: Update album info
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlbumDto'
      responses:
        '200':
          description: Album updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Invalid album ID format
        '404':
          description: Album not found
    delete:
      summary: Delete an album
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Album deleted successfully
        '400':
          description: Invalid album ID format
        '404':
          description: Album not found

  /favs:
    get:
      summary: Get all favorites
      responses:
        '200':
          description: Successfully retrieved favorites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoritesResponse'

  /favs/track/{id}:
    post:
      summary: Add track to favorites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Track added to favorites
        '400':
          description: Invalid track ID format
        '422':
          description: Track doesn't exist
    delete:
      summary: Remove track from favorites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Track removed from favorites
        '400':
          description: Invalid track ID format
        '404':
          description: Track not in favorites

  /favs/album/{id}:
    post:
      summary: Add album to favorites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Album added to favorites
        '400':
          description: Invalid album ID format
        '422':
          description: Album doesn't exist
    delete:
      summary: Remove album from favorites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Album removed from favorites
        '400':
          description: Invalid album ID format
        '404':
          description: Album not in favorites

  /favs/artist/{id}:
    post:
      summary: Add artist to favorites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Artist added to favorites
        '400':
          description: Invalid artist ID format
        '422':
          description: Artist doesn't exist
    delete:
      summary: Remove artist from favorites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Artist removed from favorites
        '400':
          description: Invalid artist ID format
        '404':
          description: Artist not in favorites
